name: Pyinstaller

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-ubuntu:

    environment: env
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f action_requirements.txt ]; then pip install -r action_requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build for Ubuntu and upload
      run: |
        python -m PyInstaller wimmelbild2png.spec
    - uses: actions/upload-artifact@v2
      with:
          name: Ubuntu_Wimmelbildviewer
          path: dist/wimmelbild2png
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: "Test Release 1"
        release_name: ${{ github.event.head_commit.message }}
        body: |
          Built with GitHub Actions automatically on push, be careful.
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: dist/wimmelbild2png.exe
        asset_name: wimmelbild2png.exe
        asset_content_type: application/zip
  build-windows:

    environment: env
    permissions: write-all
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r action_requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build for Windows and upload
      run: |
        python -m PyInstaller wimmelbild2png.spec
    - uses: actions/upload-artifact@v2
      with:
          name: Windows_Wimmelbildviewer
          path: dist/wimmelbild2png.exe
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: "Test Release 1"
        release_name: ${{ github.event.head_commit.message }}
        overwrite: true
        body: |
          Test Release
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: dist/wimmelbild2png.exe
        asset_name: wimmelbild2png.exe
        asset_content_type: application/zip
